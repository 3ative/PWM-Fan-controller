substitutions:
  name: "Media Centre" # Location and Entity Names (Capitals and Spaces Allowed)
  max_temp: "70" # Threshold for MAX Fan Speed and Alarm

esphome:
  name: "fan-media-centre"
  platform: ESP8266
  board: d1_mini
  esp8266_restore_from_flash: true

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

logger:
  logs:
    dallas.sensor: none
    number: none
    sensor: none
    light: none
    fan: none

api:
ota:

number:
  # Slider to set Min Temperature to start fan
  - platform: template
    id: set_temp
    name: $name Set Temp
    optimistic: True
    min_value: 15
    max_value: 60
    initial_value: 35
    step: 1
    restore_value: true # Store setting between reboots

dallas:
  pin: D7
  update_interval: 5s

sensor:
  - platform: dallas
    address: 0x823c01f095737e28 # Put YOUR Address here
    name: $name Temperature
    id: temp_sensor
    accuracy_decimals: 0

    # Adjust fan speed(1-100%). Else, turn it off
    on_value:
      - lambda: !lambda |
          auto pct = map(x, id(set_temp).state, $max_temp, 1, 100);
          if (pct>1) {
            auto call = id(the_fan).turn_on(); call.set_speed(pct); call.perform();
          } else {             
            auto call = id(the_fan).turn_off(); call.perform();
          }

      # ALARM If over 'Max Temp' for 10 Seconds: Turn on 'binary_sensor: alarm' & Flash the On-Board LED. Else, turn them off
      - if:
          condition:
            for:
              time: 10s
              condition:
                lambda: |-
                  return id(temp_sensor).state > $max_temp;
          then:
            - light.turn_on:
                id: d4_light
                effect: flashfast

            - lambda: !lambda |-
                id(alarm).publish_state(true);
          else:
            - light.turn_off: d4_light
            - lambda: !lambda |-
                id(alarm).publish_state(false);

switch:
  # Fan power (MOSFET)
  - platform: gpio
    pin: D2
    id: fan_power

fan:
  - platform: speed
    id: the_fan
    output: fan_pwm
    name: $name Fan
    speed_count: 100
    on_turn_on:
      - switch.turn_on: fan_power
    on_turn_off:
      - switch.turn_off: fan_power

binary_sensor:
  - platform: template
    id: alarm
    name: $name Alarm
    icon: mdi:fire

light:
  # On Board LED
  - platform: monochromatic
    id: d4_light
    output: d4_light_pwm
    effects:
      - pulse:
          name: flashfast
          transition_length: 0.0s
          update_interval: 0.04s

output:
  - platform: esp8266_pwm
    id: fan_pwm
    pin:
      number: D3
    min_power: 0.1 #Slowest Speed for Nochua Fans is 10%
    frequency: 22.5kHz #Pulse the fan fast to prevent noise

  - platform: esp8266_pwm
    id: d4_light_pwm
    pin:
      number: D4
      inverted: true
